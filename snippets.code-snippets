{
	"newtype": {
		"scope": "unison,u",
		"prefix": "newtype",
		"body": [
			"type $1 = $1 ${2:Text}",
			"$1.unwrap = cases $1 v -> v",
			"$0"
		],
		"description": "Create a newtype and a function to unwrap it"
	},
	"ability": {
		"scope": "unison,u",
		"prefix": "ability",
		"body": [
			"ability $1 where",
			"\tfoo : Text ->{$1} Text",
			"",
			"$1.run : '{g, $1} a -> {g, ${2:IO, Exception}} a",
			"$1.run p =",
			"\tgo : '{g, $1} a -> {g, ${2:IO, Exception}} a",
			"\tgo p = handle !p with cases",
			"\t\t{foo input -> resume} ->",
			"\t\t\tresult = todo \"fill in the implementation\"",
			"\t\t\tgo '(resume result)",
			"\t\t{ k } -> k",
			"\tgo p",
			"$0",
		],
		"description": "Stub a new ability and a corresponding handler"
	},
	"routes": {
		"scope": "unison,u",
		"prefix": "routes",
		"body": [
			"$1.routes : '{Route, Log} ()",
			"$1.routes =",
			"\tuse Parser / s",
			"\tuse Route <|>",
			"\thelloWorld = do",
			"\t\tname = route GET (s \"hello\" / Parser.text)",
			"\t\tok.text (\"Hello, \" ++ name)",
			"\thelloWorld",
		],
		"description": "Stub a routes function"
	},
	"deploy": {
		"scope": "unison,u",
		"prefix": "deploy",
		"body": [
			"deploy.deploy : '{IO, Exception} URI",
			"deploy.deploy = Cloud.main do",
			"\tenvironment = !Environment.default",
			"\tdatabase = main.initializeStorage environment",
			"\tserviceName = ServiceName.create \"$1\"",
			"\tserviceHash = deployHttp environment (main database)",
			"\tServiceName.assign serviceName serviceHash",
			"",
			"deploy.root : Text",
			"deploy.root = \"\"",
			"",
			"main.initializeStorage : Environment ->{Exception, Cloud} Database",
			"main.initializeStorage env =",
			"\tdatabase = Database.create \"myDatabase\"",
			"\tDatabase.assign database env",
			"\tdatabase",
			"",
			"main.main :",
			"\tDatabase",
			"\t\t-> HttpRequest",
			"\t\t->{Exception, State, Remote, Random, Log} HttpResponse",
			"main.main db req =",
			"\tuse Route <|>",
			"\tRoute.run",
			"\t\t(todo \"put routes here\")",
			"\t\treq",

		],
		"description": "Stub the spine of the app with a deploy and main function"
	},
}